2002-12-26  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-auth.c: fixes fixes fixes

	* dbus/dbus-transport-unix.c: wire up support for
	encoding/decoding data on the wire

	* dbus/dbus-auth.c (_dbus_auth_encode_data) 
	(_dbus_auth_decode_data): append to target string 
	instead of nuking it.

2002-12-26  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-marshal.h (DBUS_COMPILER_BYTE_ORDER): #ifdef
	WORDS_BIGENDIAN then compiler byte order is DBUS_BIG_ENDIAN,
	doh

	* dbus/dbus-marshal.c: Add macros to do int swapping in-place and
	avoid swap_bytes() overhead (ignoring possible assembly stuff for 
	now). Main point is because I wanted unpack_uint32 to implement
	_dbus_verbose_bytes
	(_dbus_verbose_bytes): new function

	* dbus/dbus-string.c (_dbus_string_validate_ascii): new function

	* dbus/dbus-message.c (_dbus_message_loader_get_is_corrupted): add
	mechanism to handle a corrupt message stream
	(_dbus_message_loader_new): fix preallocation to only prealloc, 
	not prelengthen
	
	* dbus/dbus-string.c (_dbus_string_skip_blank): fix this function
	(_dbus_string_test): enhance tests for copy/move and fix the
	functions

	* dbus/dbus-transport-unix.c: Hold references in more places to 
	avoid reentrancy problems

	* dbus/dbus-transport.c: ditto

	* dbus/dbus-connection.c (dbus_connection_dispatch_message): don't
	leak reference count in no-message case

	* test/watch.c (do_mainloop): handle adding/removing watches
	during iteration over the watches. Also, ref the connection/server
	stored on a watch, so we don't try to mangle a destroyed one.

	* dbus/dbus-transport-unix.c (do_authentication): perform
	authentication

	* dbus/dbus-auth.c (get_state): add a state
	AUTHENTICATED_WITH_UNUSED_BYTES and return it if required
	(_dbus_auth_get_unused_bytes): append the unused bytes
	to the passed in string, rather than prepend

	* dbus/dbus-transport.c (_dbus_transport_init_base): create 
	the auth conversation DBusAuth

	* dbus/dbus-transport-unix.c (_dbus_transport_new_for_fd)
	(_dbus_transport_new_for_domain_socket): when creating a
	transport, pass in whether it's a client-side or server-side
	transport so we know which DBusAuth to create

2002-12-03  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-transport-unix.c (unix_finalize): finalize base
	_after_ finalizing the derived members
	(unix_connection_set): unref watch if we fail to add it

	* dbus/dbus-connection.c (dbus_connection_unref): delete the
	transport first, so that the connection owned by the 
	transport will be valid as the transport finalizes.

	* dbus/dbus-transport-unix.c (unix_finalize): free the write_watch
	if necessary, and remove watches from the connection.
	
	* dbus/dbus-watch.c (_dbus_watch_list_free): improve a comment
	
2002-12-26  Anders Carlsson  <andersca@codefactory.se>

	* dbus/dbus-marshal.c: (_dbus_marshal_string),
	(_dbus_demarshal_double), (_dbus_demarshal_int32),
	(_dbus_demarshal_uint32), (_dbus_demarshal_string),
	(_dbus_marshal_test):
	* dbus/dbus-marshal.h:
	Add string marshal functions and have the demarshal functions
	return the new position.
	
2002-12-25  Havoc Pennington  <hp@pobox.com>

	* doc/dbus-sasl-profile.txt: docs on the authentication protocol, 
	it is a simple protocol that just maps directly to SASL.

	* dbus/dbus-auth.h, dbus/dbus-auth.c: authentication protocol
	initial implementation, not actually used yet.
	
	* dbus/dbus-string.c (_dbus_string_find): new function
	(_dbus_string_equal): new function
	(_dbus_string_base64_encode): new function
	(_dbus_string_base64_decode): new function

2002-12-25  Anders Carlsson  <andersca@codefactory.se>

	* dbus/Makefile.am:
	* dbus/dbus-marshal.c: (swap_bytes), (_dbus_marshal_double),
	(_dbus_marshal_int32), (_dbus_marshal_uint32),
	(_dbus_demarshal_double), (_dbus_demarshal_int32),
	(_dbus_demarshal_uint32), (_dbus_marshal_test):
	* dbus/dbus-marshal.h:
	* dbus/dbus-protocol.h:
	* dbus/dbus-test.c: (main):
	* dbus/dbus-test.h:
	Add un-optimized marshalling/demarshalling routines.
	
2002-12-25  Harri Porten  <porten@kde.org>

	* qt/dbus-qt.h: adjusted ctor and getter to KDE/Qt conventions

2002-12-24  Zack Rusin  <zack@kde.org>

	* qt/dbus-qthread.cc: adding - integrates QMutex into Dbus
	* qt/dbus-qt.h: skeleton with two sample implemenatation of the
	main loop stuff

2002-12-24  Havoc Pennington  <hp@pobox.com>

	* glib/dbus-gthread.c: fix include

	* glib/dbus-glib.h: rename DBusMessageHandler for now. 
	I think glib API needs to change, though, as you don't 
	want to use DBusMessageFunction, you want to use the 
	DBusMessageHandler object. Probably 
	dbus_connection_open_with_g_main_loop()
	and dbus_connection_setup_g_main_loop() or something like that
	(but think of better names...) that just create a connection 
	that has watch/timeout functions etc. already set up.

	* dbus/dbus-connection.c
	(dbus_connection_send_message_with_reply): new function just to 
	show how the message handler helps us deal with replies.

	* dbus/dbus-list.c (_dbus_list_remove_last): new function

	* dbus/dbus-string.c (_dbus_string_test): free a string that
	wasn't

	* dbus/dbus-hash.c: use memory pools for the hash entries
	(rebuild_table): be more paranoid about overflow, and 
	shrink table when we can
	(_dbus_hash_test): reduce number of sprintfs and write
	valid C89. Add tests for case where we grow and then 
	shrink the hash table.

	* dbus/dbus-mempool.h, dbus/dbus-mempool.c: memory pools

	* dbus/dbus-connection.c (dbus_connection_register_handler) 
	(dbus_connection_unregister_handler): new functions

	* dbus/dbus-message.c (dbus_message_get_name): new

	* dbus/dbus-list.c: fix docs typo

	* dbus/dbus-message-handler.h, dbus/dbus-message-handler.c:
	an object representing a handler for messages.

2002-12-16  Anders Carlsson  <andersca@codefactory.se>

	* glib/dbus-glib.h:
	* glib/dbus-gthread.c: (dbus_gthread_init):
	Don't use the gdbus prefix for public functions.
	
2002-12-16  Anders Carlsson  <andersca@codefactory.se>

	* Makefile.am:
	* configure.in:
	Add GLib checks and fixup .pc files
	
	* glib/Makefile.am:
	* glib/dbus-glib.h:
	* glib/dbus-gmain.c: (gdbus_connection_prepare),
	(gdbus_connection_check), (gdbus_connection_dispatch),
	(gdbus_add_connection_watch), (gdbus_remove_connection_watch),
	(dbus_connection_gsource_new):
	* glib/dbus-gthread.c: (dbus_gmutex_new), (dbus_gmutex_free),
	(dbus_gmutex_lock), (dbus_gmutex_unlock), (dbus_gthread_init):
	* glib/test-dbus-glib.c: (message_handler), (main):
	Add GLib support.
	
2002-12-15  Harri Porten  <porten@kde.org>

	* autogen.sh: check for libtoolize before attempting to use it 
	
	* dbus/dbus-transport-unix.c: include <sys/time.h> for timeval
	struct.
	
	* .cvsignore: ignore more stamp files

	* dbus/dbus-watch.c (_dbus_watch_list_new): fixed doc error

	* test/Makefile.am: added -I$(top_srcdir) to be able to compile
	without make install.

2002-12-15  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-threads.c: add thread stubs that a higher library
	layer can fill in. e.g. the GLib wrapper might fill them in with
	GThread stuff. We still need to use this thread API to
	thread-safe-ize the library.

2002-12-12  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-transport-unix.c, dbus/dbus-server-unix.c: use the
	below new interfaces and include fewer system headers.

	* dbus/dbus-sysdeps.c (_dbus_read): new function
	(_dbus_write): new function
	(_dbus_write_two): new function
	(_dbus_connect_unix_socket): new function
	(_dbus_listen_unix_socket): new function

	* dbus/dbus-message-internal.h: change interfaces to use
	DBusString

2002-12-11  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-types.h: add dbus_unichar

	* dbus/dbus-internals.c (_dbus_verbose): use _dbus_getenv

	* dbus/dbus-connection.c (dbus_connection_send_message): return
	TRUE on success

	* dbus/dbus-transport.c: include dbus-watch.h	

	* dbus/dbus-connection.c: include dbus-message-internal.h

	* HACKING: add file with coding guidelines stuff.

	* dbus/dbus-string.h, dbus/dbus-string.c: Encapsulate all string
	handling here, for security purposes (as in vsftpd). Not actually
	using this class yet.

	* dbus/dbus-sysdeps.h, dbus/dbus-sysdeps.c: Encapsulate all
	system/libc usage here, as in vsftpd, for ease of auditing (and
	should also simplify portability). Haven't actually moved all the
	system/libc usage into here yet.
	
2002-11-25  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-internals.c (_dbus_verbose): fix to not 
	always print the first verbose message.

2002-11-24  Havoc Pennington  <hp@pobox.com>

        * test/echo-client.c, test/echo-server.c: cheesy test 
	clients.
	
	* configure.in (AC_CHECK_FUNCS): check for writev

	* dbus/dbus-message.c (_dbus_message_get_network_data): new
	function

	* dbus/dbus-list.c (_dbus_list_foreach): new function

	* dbus/dbus-internals.c (_dbus_verbose): new function

	* dbus/dbus-server.c, dbus/dbus-server.h: public object
	representing a server that listens for connections.

	* dbus/.cvsignore: create

	* dbus/dbus-errors.h, dbus/dbus-errors.c:
	public API for reporting errors

	* dbus/dbus-connection.h, dbus/dbus-connection.c:
	public object representing a connection that 
	sends/receives messages. (Same object used for 
	both client and server.)

	* dbus/dbus-transport.h, dbus/dbus-transport.c:
	Basic abstraction for different kinds of stream
	that we might read/write messages from.

2002-11-23  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-internals.h (_DBUS_INT_MAX): add _DBUS_INT_MIN 
	_DBUS_INT_MAX

	* dbus/dbus-test.c (main): add list test, and include 
	dbus-test.h as intended

	* dbus/dbus-hash.c (_dbus_hash_table_remove_string) 
	(_dbus_hash_table_remove_int): return value indicates 
	whether the entry existed to remove

	* dbus/dbus-list.c: add linked list utility class, 
	with docs and tests

	* dbus/dbus-hash.c: add TODO item about shrinking the hash bucket 
	array sometimes.

2002-11-23  Havoc Pennington  <hp@pobox.com>

	* Doxyfile.in (INCLUDE_FILE_PATTERNS): expand DBUS_BEGIN_DECLS/
	DBUS_END_DECLS to nothing, that should fix this once and for all

	* Doxyfile.in (JAVADOC_AUTOBRIEF): set to YES

	* dbus/dbus-message.c, dbus/dbus-hash.c: 
	add some missing @brief

2002-11-23  Havoc Pennington  <hp@pobox.com>

	* dbus/dbus-message.h: put semicolons after DEBUG_BEGIN_DECLS 
	to avoid confusing Doxygen

	* dbus/dbus-hash.c: @} not }@

	* dbus/dbus-message.c (struct DBusMessage): split out 
	internals docs

2002-11-23  Havoc Pennington  <hp@pobox.com>

	* configure.in: pile on more warning flags if using gcc

	* Doxyfile.in (EXTRACT_STATIC): set to NO, so we don't have 
	to document static functions

	* configure.in: add summary to end of configure so it 
	looks nice and attractive

	* dbus/dbus-hash.c: finish implementation and write unit 
	tests and docs

	* configure.in: add --enable-tests to enable unit tests

	* dbus/dbus-test.c: test program to run unit tests 
	for all files in dbus/*, initially runs a test for 
	dbus-hash.c
	
	* dbus/dbus-internals.h: file to hold some internal utility stuff

2002-11-22  Havoc Pennington  <hp@redhat.com>

	* dbus/dbus-hash.c: copy in Tcl hash table, not yet 
	"ported" away from Tcl

	* dbus/dbus-types.h: header for types such as dbus_bool_t

2002-11-22  Havoc Pennington  <hp@redhat.com>

	* dbus/dbus.h: fixups for doc warnings

	* Doxyfile.in (FILE_PATTERNS): we need to scan .h to pick up 
	macros
	(QUIET): make it quiet so we can see warnings

	* dbus/dbus-memory.c: teach D-BUS to allocate and free memory

2002-11-22  Havoc Pennington  <hp@redhat.com>

	* Makefile.am: include "Doxyfile" target in all-local

	* configure.in: generate the Doxyfile

	* Doxyfile.in: move Doxyfile here, so we can use 
	configure to generate a Doxyfile with the right 
	version number etc.

2002-11-22  Havoc Pennington  <hp@redhat.com>

	* dbus/dbus-message.c: move inline docs into .c file

	* Doxyfile (OUTPUT_DIRECTORY): move output to doc/api
	so all docs are under doc/
	(MAN_EXTENSION): generate man pages. Use extension 
	".3dbus" which matches ".3qt" on my system, 
	I guess this is OK, I don't know really.
	(FILE_PATTERNS): look for .c files not .h, makes sense
	for plain C I think

2002-11-22  Havoc Pennington  <hp@pobox.com>

	* Makefile.am (SUBDIRS): rename subdir "server" to "bus" 
	because any app can be a server, and any app can be a client, 
	the bus is a special kind of server.

Thu Nov 21 23:35:31 2002  Zack Rusin  <zack@kde.org>

	* Doxyfile : adding. Still needs Makefile rules to be generated
	automatically (just run "doxygen" in the toplevel dir for now to
	generate docs)
	
	* dbus/dbus-message.h : Adding sample docs (javadoc since
	resembles gtk-doc a little more)

	* dbus/dbus.h : Adding sample docs

2002-11-21  Havoc Pennington  <hp@redhat.com>

	* dbus/Makefile.am (INCLUDES): define DBUS_COMPILATION 
	so we can allow ourselves to include files directly, 
	instead of having to use dbus.h

	* dbus/dbus.h: fill in

	* dbus/dbus-message.h: sketch out a sample header file.
	Include griping if you include it directly instead of 
	via dbus.h

	* dbus/dbus-macros.h: new file with macros for extern "C", 
	TRUE/FALSE, NULL, etc.

	* doc/file-boilerplate.c: put include guards in here

2002-11-21  Havoc Pennington  <hp@redhat.com>

	* doc/file-boilerplate.c: include both AFL and GPL boilerplate.

	* COPYING: include the GPL as well, and license code 
	under both AFL and GPL.

2002-11-21  Havoc Pennington  <hp@redhat.com>

	* acconfig.h: get rid of this

	* autogen.sh (run_configure): add --no-configure option

	* configure.in: remove AC_ARG_PROGRAM to make
	autoconf complain less. add AC_PREREQ. 
	add AC_DEFINE third arg.
	
2002-11-21  Anders Carlsson  <andersca@codefactory.se>

	* doc/Makefile.am:
	Fix references so we can distcheck.

2002-11-21  Havoc Pennington  <hp@redhat.com>

	* Initial module creation

